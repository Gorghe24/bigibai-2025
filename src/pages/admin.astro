---
import Layout from '@/layouts/Layout.astro'
import Header from '@/sections/Header.astro'
import { supabaseAdmin } from '@/supabase-admin'
import { isAdmin } from '@/utils/admin'

// Verificar que el usuario est√© autenticado
if (!Astro.locals.user) {
  return Astro.redirect('/404')
}

// Verificar que el email del usuario est√© en la lista de admins
const userId = Astro.locals.user.id
if (!isAdmin(userId)) {
  return Astro.redirect('/404')
}

// Obtener estad√≠sticas generales

// 1. Total de cupones usados
const { count: totalCouponsUsed } = await supabaseAdmin
  .from('coupons')
  .select('*', { count: 'exact', head: true })
  .eq('is_used', true)

// 3. Calcular media de cupones por usuario
// Obtener todos los usuarios √∫nicos que han usado al menos un cup√≥n
const { data: usersWithCoupons } = await supabaseAdmin
  .from('coupons')
  .select('used_by')
  .eq('is_used', true)
  .not('used_by', 'is', null)

// Usar Set para obtener usuarios √∫nicos de forma m√°s simple
const uniqueUsersCount = new Set(usersWithCoupons?.map((c) => c.used_by)).size

// Calcular la media
const averageCouponsPerUser = uniqueUsersCount > 0 ? (totalCouponsUsed || 0) / uniqueUsersCount : 0

// Obtener cupones del usuario actual para el header
const { data: userCoupons } = await supabaseAdmin
  .from('coupons')
  .select('used_at')
  .eq('used_by', Astro.locals.user.id)
  .eq('is_used', true)

const totalUserCoupons = userCoupons?.length || 0
---

<Layout title="Panel de Administraci√≥n - Big Ibai 2025">
  <div class="flex min-h-screen flex-col">
    <Header participationCount={totalUserCoupons} />

    <main class="mx-auto w-full max-w-7xl flex-1 px-4 py-12 md:py-20">
      <div class="space-y-8">
        <!-- Encabezado -->
        <div class="text-center">
          <h1 class="text-shadow-title text-4xl font-bold text-white md:text-5xl lg:text-6xl">
            Panel de Administraci√≥n
          </h1>
          <p class="mt-4 text-lg text-white/80 md:text-xl">
            Bienvenido, {Astro.locals.user.user_metadata.full_name}
          </p>
        </div>

        <!-- Estad√≠sticas generales -->
        <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4">
          <!-- Total de usuarios -->
          <div class="bento-card group overflow-hidden" style="animation-delay: 0.1s;">
            <div class="flex flex-col items-center justify-center p-8 text-center">
              <div class="mb-4 text-6xl">üë•</div>
              <h3 class="text-shadow-title text-2xl font-bold text-white md:text-3xl">
                {uniqueUsersCount}
              </h3>
              <p class="mt-2 text-white/80">Usuarios con cupones</p>
            </div>
          </div>

          <!-- Cupones usados -->
          <div class="bento-card group overflow-hidden" style="animation-delay: 0.2s;">
            <div class="flex flex-col items-center justify-center p-8 text-center">
              <div class="mb-4 text-6xl">üéüÔ∏è</div>
              <h3 class="text-shadow-title text-2xl font-bold text-white md:text-3xl">
                {totalCouponsUsed || 0}
              </h3>
              <p class="mt-2 text-white/80">Cupones usados</p>
            </div>
          </div>

          <!-- Media de cupones por usuario -->
          <div class="bento-card group overflow-hidden" style="animation-delay: 0.3s;">
            <div class="flex flex-col items-center justify-center p-8 text-center">
              <div class="mb-4 text-6xl">üìä</div>
              <h3 class="text-shadow-title text-2xl font-bold text-white md:text-3xl">
                {averageCouponsPerUser.toFixed(2)}
              </h3>
              <p class="mt-2 text-white/80">Media cupones/usuario</p>
            </div>
          </div>
        </div>

        <!-- Grid de b√∫squedas -->
        <div class="grid grid-cols-1 gap-6 lg:grid-cols-2">
          <!-- Secci√≥n de validaci√≥n de cupones -->
          <div class="bento-card overflow-hidden" style="animation-delay: 0.4s;">
            <div class="p-8">
              <h2 class="text-shadow-title mb-6 text-center text-3xl font-bold text-white">
                Validar Cup√≥n
              </h2>
              <p class="mb-6 text-center text-white/80">
                Introduce el c√≥digo de un cup√≥n para verificar si ha sido usado
              </p>

              <form id="coupon-validation-form" class="mx-auto max-w-md space-y-4">
                <div>
                  <input
                    type="text"
                    id="coupon-input"
                    name="coupon"
                    placeholder="C√≥digo del cup√≥n"
                    class="w-full rounded-lg border border-white/20 bg-black/30 px-4 py-3 text-white placeholder-white/50 backdrop-blur-sm focus:border-brand focus:outline-none focus:ring-2 focus:ring-brand/50"
                    required
                  />
                </div>

                <button
                  type="submit"
                  class="w-full rounded-lg bg-brand px-6 py-3 font-bold text-black transition-all hover:scale-105 hover:brightness-110 active:scale-95"
                >
                  Validar Cup√≥n
                </button>
              </form>

              <!-- Resultado de la b√∫squeda -->
              <div id="coupon-result" class="mt-6 hidden">
                <!-- Contenedor para el resultado -->
              </div>
            </div>
          </div>

          <!-- Secci√≥n de b√∫squeda de usuario -->
          <div class="bento-card overflow-hidden" style="animation-delay: 0.5s;">
            <div class="p-8">
              <h2 class="text-shadow-title mb-6 text-center text-3xl font-bold text-white">
                Buscar Usuario
              </h2>
              <p class="mb-6 text-center text-white/80">
                Introduce el email de un usuario para ver su informaci√≥n
              </p>

              <form id="user-search-form" class="mx-auto max-w-md space-y-4">
                <div>
                  <input
                    type="email"
                    id="user-email-input"
                    name="email"
                    placeholder="Email del usuario"
                    class="w-full rounded-lg border border-white/20 bg-black/30 px-4 py-3 text-white placeholder-white/50 backdrop-blur-sm focus:border-brand focus:outline-none focus:ring-2 focus:ring-brand/50"
                    required
                  />
                </div>

                <button
                  type="submit"
                  class="w-full rounded-lg bg-brand px-6 py-3 font-bold text-black transition-all hover:scale-105 hover:brightness-110 active:scale-95"
                >
                  Buscar Usuario
                </button>
              </form>

              <!-- Resultado de la b√∫squeda -->
              <div id="user-result" class="mt-6 hidden">
                <!-- Contenedor para el resultado -->
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>
</Layout>

<script>
  const form = document.getElementById('coupon-validation-form') as HTMLFormElement
  const resultDiv = document.getElementById('coupon-result') as HTMLDivElement
  const couponInput = document.getElementById('coupon-input') as HTMLInputElement

  form?.addEventListener('submit', async (e) => {
    e.preventDefault()

    const coupon = couponInput.value.trim()
    if (!coupon) return

    // Mostrar loading
    resultDiv.classList.remove('hidden')
    resultDiv.innerHTML = `
      <div class="rounded-lg bg-white/5 p-6 text-center backdrop-blur-sm">
        <div class="mb-4 text-4xl">‚è≥</div>
        <p class="text-white/80">Buscando cup√≥n...</p>
      </div>
    `

    try {
      const response = await fetch(
        `/api/admin/validate-coupon?coupon=${encodeURIComponent(coupon)}`
      )
      const data = await response.json()

      if (!response.ok) {
        resultDiv.innerHTML = `
          <div class="rounded-lg bg-red-500/20 p-6 backdrop-blur-sm border border-red-500/30">
            <div class="mb-4 text-center text-4xl">‚ùå</div>
            <p class="text-center text-white font-bold">${data.error || 'Error al buscar el cup√≥n'}</p>
          </div>
        `
        return
      }

      if (!data.is_used) {
        resultDiv.innerHTML = `
          <div class="rounded-lg bg-yellow-500/20 p-6 backdrop-blur-sm border border-yellow-500/30">
            <div class="mb-4 text-center text-4xl">‚ö†Ô∏è</div>
            <h3 class="mb-2 text-center text-xl font-bold text-white">Cup√≥n no usado</h3>
            <p class="text-center text-white/80">Este cup√≥n existe pero a√∫n no ha sido utilizado</p>
            <div class="mt-4 text-center">
              <p class="text-sm text-white/60">ID: ${data.id}</p>
            </div>
          </div>
        `
      } else {
        const usedDate = new Date(data.used_at)
        const formattedDate = usedDate.toLocaleString('es-ES', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
          hour: '2-digit',
          minute: '2-digit',
        })

        resultDiv.innerHTML = `
          <div class="rounded-lg bg-green-500/20 p-6 backdrop-blur-sm border border-green-500/30">
            <div class="mb-4 text-center text-4xl">‚úÖ</div>
            <h3 class="mb-4 text-center text-xl font-bold text-white">Cup√≥n usado</h3>
            
            <div class="space-y-3 text-white/90">
              <div class="flex justify-between border-b border-white/10 pb-2">
                <span class="font-semibold">ID del cup√≥n:</span>
                <span class="font-mono text-sm">${data.id}</span>
              </div>
              
              <div class="flex justify-between border-b border-white/10 pb-2">
                <span class="font-semibold">Usuario ID:</span>
                <span class="font-mono text-sm">${data.used_by}</span>
              </div>
              
              ${
                data.user_email
                  ? `
                <div class="flex justify-between border-b border-white/10 pb-2">
                  <span class="font-semibold">Email:</span>
                  <span class="text-sm">${data.user_email}</span>
                </div>
              `
                  : ''
              }
              
              ${
                data.user_name
                  ? `
                <div class="flex justify-between border-b border-white/10 pb-2">
                  <span class="font-semibold">Nombre:</span>
                  <span class="text-sm">${data.user_name}</span>
                </div>
              `
                  : ''
              }
              
              <div class="flex justify-between border-b border-white/10 pb-2">
                <span class="font-semibold">Usado el:</span>
                <span class="text-sm">${formattedDate}</span>
              </div>
            </div>
          </div>
        `
      }
    } catch (error) {
      console.error('Error:', error)
      resultDiv.innerHTML = `
        <div class="rounded-lg bg-red-500/20 p-6 backdrop-blur-sm border border-red-500/30">
          <div class="mb-4 text-center text-4xl">‚ùå</div>
          <p class="text-center text-white font-bold">Error al validar el cup√≥n</p>
          <p class="mt-2 text-center text-sm text-white/70">Int√©ntalo de nuevo m√°s tarde</p>
        </div>
      `
    }
  })

  // Script para b√∫squeda de usuario
  const userForm = document.getElementById('user-search-form') as HTMLFormElement
  const userResultDiv = document.getElementById('user-result') as HTMLDivElement
  const emailInput = document.getElementById('user-email-input') as HTMLInputElement

  userForm?.addEventListener('submit', async (e) => {
    e.preventDefault()

    const email = emailInput.value.trim()
    if (!email) return

    // Mostrar loading
    userResultDiv.classList.remove('hidden')
    userResultDiv.innerHTML = `
      <div class="rounded-lg bg-white/5 p-6 text-center backdrop-blur-sm">
        <div class="mb-4 text-4xl">‚è≥</div>
        <p class="text-white/80">Buscando usuario...</p>
      </div>
    `

    try {
      const response = await fetch(`/api/admin/search-user?email=${encodeURIComponent(email)}`)
      const data = await response.json()

      if (!response.ok) {
        userResultDiv.innerHTML = `
          <div class="rounded-lg bg-red-500/20 p-6 backdrop-blur-sm border border-red-500/30">
            <div class="mb-4 text-center text-4xl">‚ùå</div>
            <p class="text-center text-white font-bold">${data.error || 'Error al buscar el usuario'}</p>
          </div>
        `
        return
      }

      const createdDate = new Date(data.created_at)
      const formattedCreatedDate = createdDate.toLocaleString('es-ES', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
      })

      const lastSignIn = data.last_sign_in_at
        ? new Date(data.last_sign_in_at).toLocaleString('es-ES', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
          })
        : 'Nunca'

      // Generar lista de cupones si existen
      let couponsHtml = ''
      if (data.coupons && data.coupons.length > 0) {
        couponsHtml = `
          <div class="mt-4 border-t border-white/20 pt-4">
            <h4 class="mb-3 text-center font-semibold text-white">Cupones usados (${data.coupons.length})</h4>
            <div class="max-h-60 space-y-2 overflow-y-auto">
              ${data.coupons
                .map((coupon: any) => {
                  const usedDate = new Date(coupon.used_at).toLocaleString('es-ES', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit',
                  })
                  return `
                    <div class="rounded bg-white/5 p-3">
                      <div class="flex justify-between text-xs text-white/70">
                        <span>ID: ${coupon.id}</span>
                        <span>${usedDate}</span>
                      </div>
                    </div>
                  `
                })
                .join('')}
            </div>
          </div>
        `
      } else {
        couponsHtml = `
          <div class="mt-4 border-t border-white/20 pt-4 text-center">
            <p class="text-white/60">No ha usado ning√∫n cup√≥n</p>
          </div>
        `
      }

      userResultDiv.innerHTML = `
        <div class="rounded-lg bg-blue-500/20 p-6 backdrop-blur-sm border border-blue-500/30">
          <div class="mb-4 text-center text-4xl">üë§</div>
          <h3 class="mb-4 text-center text-xl font-bold text-white">Usuario encontrado</h3>
          
          <div class="space-y-3 text-white/90">
            <div class="flex justify-between border-b border-white/10 pb-2">
              <span class="font-semibold">ID:</span>
              <span class="font-mono text-sm">${data.id}</span>
            </div>
            
            <div class="flex justify-between border-b border-white/10 pb-2">
              <span class="font-semibold">Email:</span>
              <span class="text-sm">${data.email}</span>
            </div>
            
            ${
              data.name
                ? `
              <div class="flex justify-between border-b border-white/10 pb-2">
                <span class="font-semibold">Nombre:</span>
                <span class="text-sm">${data.name}</span>
              </div>
            `
                : ''
            }
            
            ${
              data.provider
                ? `
              <div class="flex justify-between border-b border-white/10 pb-2">
                <span class="font-semibold">Proveedor:</span>
                <span class="text-sm">${data.provider}</span>
              </div>
            `
                : ''
            }
            
            <div class="flex justify-between border-b border-white/10 pb-2">
              <span class="font-semibold">Creado:</span>
              <span class="text-sm">${formattedCreatedDate}</span>
            </div>
            
            <div class="flex justify-between border-b border-white/10 pb-2">
              <span class="font-semibold">√öltimo acceso:</span>
              <span class="text-sm">${lastSignIn}</span>
            </div>
            
            <div class="flex justify-between pb-2">
              <span class="font-semibold">Email verificado:</span>
              <span class="text-sm">${data.email_confirmed_at ? '‚úÖ S√≠' : '‚ùå No'}</span>
            </div>
          </div>

          ${couponsHtml}
        </div>
      `
    } catch (error) {
      console.error('Error:', error)
      userResultDiv.innerHTML = `
        <div class="rounded-lg bg-red-500/20 p-6 backdrop-blur-sm border border-red-500/30">
          <div class="mb-4 text-center text-4xl">‚ùå</div>
          <p class="text-center text-white font-bold">Error al buscar el usuario</p>
          <p class="mt-2 text-center text-sm text-white/70">Int√©ntalo de nuevo m√°s tarde</p>
        </div>
      `
    }
  })
</script>

<style>
  .bento-card {
    position: relative;
    background: linear-gradient(135deg, rgba(139, 92, 246, 0.5) 0%, rgba(0, 41, 107, 0.7) 100%);
    border-radius: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    animation: fadeInScale 0.6s ease-out;
    animation-fill-mode: both;
    transition: all 0.3s ease;
  }

  .bento-card:hover {
    border-color: rgba(255, 255, 255, 0.2);
    box-shadow: 0 20px 60px rgba(139, 92, 246, 0.3);
    transform: translateY(-4px);
  }

  .bento-card::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 1.5rem;
    padding: 1px;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), transparent);
    mask-composite: exclude;
    pointer-events: none;
  }

  @keyframes fadeInScale {
    from {
      opacity: 0;
      transform: scale(0.95) translateY(20px);
    }
    to {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }
</style>
