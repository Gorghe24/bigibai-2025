---
const DEFAULT_LATITUDE = '41.390205'
const DEFAULT_LONGITUDE = '2.154007'

// Leer la request de Astro y recuperar los headers x-vercel-ip-latitude y x-vercel-ip-longitude
const ipLatitude = Astro.request.headers.get('cf-iplatitude') ?? DEFAULT_LATITUDE
const ipLongitude = Astro.request.headers.get('cf-iplongitude') ?? DEFAULT_LONGITUDE

// Determinar el centro del mapa
// Prioridad: 1) Ubicación del usuario (IP), 2) Promedio de ubicaciones, 3) Centro de España
let centerLat: number
let centerLon: number
let initialZoom: number

if (ipLatitude && ipLongitude) {
  // Usar la ubicación del usuario basada en IP
  centerLat = parseFloat(ipLatitude)
  centerLon = parseFloat(ipLongitude)
  initialZoom = 11
} else {
  // Fallback: Centro de España
  centerLat = 40.4168
  centerLon = -3.7038
  initialZoom = 6
}

// Indicar si tenemos ubicación del usuario
const hasUserLocation = !!(ipLatitude && ipLongitude)
---

<section class="space-y-4" aria-labelledby="map-title">
  <h2 id="map-title" class="sr-only">Mapa de tiendas donde comprar el Calendario Big Ibai</h2>

  <!-- Mapa -->
  <div
    id="map"
    class="w-full h-[600px] rounded-lg shadow-lg border-2 border-brand/30"
    role="application"
    aria-label="Mapa interactivo mostrando ubicaciones de tiendas"
    data-has-user-location={hasUserLocation}
    data-center-lat={centerLat}
    data-center-lon={centerLon}
    data-initial-zoom={initialZoom}
  >
  </div>

  <!-- Leyenda de colores -->
  <aside
    class="legend-container relative bg-gradient-to-br from-purple-500/50 to-[#00296b]/70 rounded-3xl border border-white/10 backdrop-blur-md p-6 transition-all duration-300 hover:border-white/20 hover:shadow-[0_20px_60px_rgba(139,92,246,0.3)]"
    aria-label="Leyenda de tiendas por color"
  >
    <h3 class="sr-only">Leyenda de tiendas</h3>
    <ul class="flex flex-wrap gap-3 justify-center" id="legend" role="list">
      <li
        class="group relative flex items-center gap-3 px-5 py-3 bg-white/95 rounded-2xl transition-all duration-300 shadow-[0_2px_8px_rgba(0,0,0,0.1)] hover:-translate-y-0.5 hover:shadow-[0_4px_12px_rgba(0,0,0,0.2)] hover:bg-white"
        data-retail="eroski"
      >
        <span
          class="w-3.5 h-3.5 rounded-full shadow-[0_0_0_2px_rgba(255,255,255,0.5),0_2px_4px_rgba(0,0,0,0.2)] transition-all duration-300 group-hover:scale-110 group-hover:shadow-[0_0_0_3px_rgba(255,255,255,0.8),0_2px_8px_rgba(0,0,0,0.3)]"
          style="background-color: #f97316;"
          aria-hidden="true"></span>
        <img
          class="w-20 h-10 object-contain transition-all duration-300 group-hover:scale-105"
          src="/eroski-logo.webp"
          alt="Eroski"
        />
      </li>
      <li
        class="group relative flex items-center gap-3 px-5 py-3 bg-white/95 rounded-2xl transition-all duration-300 shadow-[0_2px_8px_rgba(0,0,0,0.1)] hover:-translate-y-0.5 hover:shadow-[0_4px_12px_rgba(0,0,0,0.2)] hover:bg-white"
        data-retail="corte-ingles"
      >
        <span
          class="w-3.5 h-3.5 rounded-full shadow-[0_0_0_2px_rgba(255,255,255,0.5),0_2px_4px_rgba(0,0,0,0.2)] transition-all duration-300 group-hover:scale-110 group-hover:shadow-[0_0_0_3px_rgba(255,255,255,0.8),0_2px_8px_rgba(0,0,0,0.3)]"
          style="background-color: #10b981;"
          aria-hidden="true"></span>
        <img
          class="w-20 h-10 object-contain transition-all duration-300 group-hover:scale-105"
          src="/el-corte-ingles-logo.webp"
          alt="El Corte Inglés"
        />
      </li>
      <li
        class="group relative flex items-center gap-3 px-5 py-3 bg-white/95 rounded-2xl transition-all duration-300 shadow-[0_2px_8px_rgba(0,0,0,0.1)] hover:-translate-y-0.5 hover:shadow-[0_4px_12px_rgba(0,0,0,0.2)] hover:bg-white"
        data-retail="carrefour"
      >
        <span
          class="w-3.5 h-3.5 rounded-full shadow-[0_0_0_2px_rgba(255,255,255,0.5),0_2px_4px_rgba(0,0,0,0.2)] transition-all duration-300 group-hover:scale-110 group-hover:shadow-[0_0_0_3px_rgba(255,255,255,0.8),0_2px_8px_rgba(0,0,0,0.3)]"
          style="background-color: #0f468f;"
          aria-hidden="true"></span>
        <img
          class="w-20 h-10 object-contain transition-all duration-300 group-hover:scale-105"
          src="/carrefour-logo.webp"
          alt="Carrefour"
        />
      </li>
      <li
        class="group relative flex items-center gap-3 px-5 py-3 bg-white/95 rounded-2xl transition-all duration-300 shadow-[0_2px_8px_rgba(0,0,0,0.1)] hover:-translate-y-0.5 hover:shadow-[0_4px_12px_rgba(0,0,0,0.2)] hover:bg-white"
        data-retail="alcampo"
      >
        <span
          class="w-3.5 h-3.5 rounded-full shadow-[0_0_0_2px_rgba(255,255,255,0.5),0_2px_4px_rgba(0,0,0,0.2)] transition-all duration-300 group-hover:scale-110 group-hover:shadow-[0_0_0_3px_rgba(255,255,255,0.8),0_2px_8px_rgba(0,0,0,0.3)]"
          style="background-color: #ef4444;"
          aria-hidden="true"></span>
        <img
          class="w-20 h-10 object-contain transition-all duration-300 group-hover:scale-105"
          src="/alcampo-logo.webp"
          alt="Alcampo"
        />
      </li>
    </ul>
  </aside>
</section>

<!-- Leaflet CSS -->
<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
  crossorigin=""
/>

<!-- Leaflet JS -->
<script
  is:inline
  src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
  crossorigin=""></script>

<script>
  const L = window.L
  const $map = document.querySelector('#map') as HTMLDivElement
  const centerLat = $map.dataset.centerLat
  const centerLon = $map.dataset.centerLon
  const initialZoom = $map.dataset.initialZoom
  const hasUserLocation = $map.dataset.hasUserLocation

  // Diccionario de retail
  const retailDictionary: Record<string, string> = {
    A: 'Eroski',
    B: 'El Corte Inglés',
    C: 'Carrefour',
    D: 'Alcampo',
  } as const

  const retailImages: Record<string, string> = {
    A: '/eroski-logo.webp',
    B: '/el-corte-ingles-logo.webp',
    C: '/carrefour-logo.webp',
    D: '/alcampo-logo.webp',
  } as const

  const colors: Record<string, string> = {
    A: '#f97316', // Eroski - Naranja
    B: '#10b981', // El Corte Inglés - Verde
    C: '#0f468f', // Carrefour - Azul oscuro
    D: '#ef4444', // Alcampo - Rojo
  } as const

  // Función para generar colores consistentes por retail
  function getColorForRetail(retail: string): string {
    return colors[retail] || '#6366f1' // Color por defecto: Índigo
  }

  function getImageForRetail(retail: string): string {
    return retailImages[retail] || '/images/retail-default.png'
  }

  // Función para obtener el nombre del retail
  function getRetailName(retail: string): string {
    return retailDictionary[retail] || retail
  }

  let locations: any[] = []

  document.addEventListener('astro:page-load', () => {
    initMap()
  })

  // Función para inicializar el mapa
  async function initMap() {
    // fetch locations if needed
    if (locations.length === 0) {
      const response = await fetch('/api/locations')
      locations = await response.json()
    }

    try {
      // Inicializar el mapa con el zoom apropiado
      const map = L.map('map').setView([centerLat, centerLon], initialZoom)
      // quitar atribución de Leaflet
      map.attributionControl.setPrefix('')

      // Añadir capa de mapa con estilo personalizado (CartoDB Voyager - colores suaves y modernos)
      L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png', {
        attribution:
          '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',
        maxZoom: 20,
      }).addTo(map)

      // Si tenemos la ubicación del usuario, añadir un marcador especial
      if (hasUserLocation) {
        const userIcon = L.divIcon({
          html: `
            <svg width="24" height="24" viewBox="0 0 24 24">
              <circle cx="12" cy="12" r="10" fill="#f8b134" stroke="#fff" stroke-width="2"/>
              <circle cx="12" cy="12" r="4" fill="#fff"/>
            </svg>
          `,
          iconSize: [24, 24],
          iconAnchor: [12, 12],
          className: 'user-location-marker',
        })

        L.marker([centerLat, centerLon], { icon: userIcon })
          .addTo(map)
          .bindPopup(
            '<div style="text-align: center; padding: 8px;"><strong style="color: #f8b134;">📍 Tu ubicación</strong></div>',
            { className: 'user-popup' }
          )

        // Añadir un círculo de radio alrededor de la ubicación del usuario
        L.circle([centerLat, centerLon], {
          color: '#f8b134',
          fillColor: '#f8b134',
          fillOpacity: 0.15,
          radius: 20000, // 20km de radio
        }).addTo(map)
      }

      // Añadir marcadores para cada ubicación
      locations.forEach((location) => {
        const color = getColorForRetail(location.retail)
        const retailName = getRetailName(location.retail)
        const retailImage = getImageForRetail(location.retail)

        // Crear marcador con la caja del calendario
        const svgIcon = `
          <div class="marker-container relative w-[45px] h-[55px]">
            <!-- Sombra del marcador -->
            <div class="absolute -bottom-0.5 left-1/2 -translate-x-1/2 w-[30px] h-2 bg-[radial-gradient(ellipse,rgba(0,0,0,0.3)_0%,transparent_70%)]"></div>
            
            <!-- Contenedor de la caja con borde de color -->
            <div class="absolute inset-0 rounded-lg bg-gradient-to-br from-purple-500/50 to-[#00296b]/70 overflow-hidden flex items-center justify-center" style="border: 2px solid ${color};">
              <img src="/calendario-producto-small.webp" alt="Calendario Big Ibai" class="w-[90%] h-[90%] object-contain" />
            </div>
            
            <!-- Brillo superior -->
            <div class="absolute top-0 left-0 right-0 h-[40%] bg-gradient-to-b from-white/15 to-transparent rounded-t-lg pointer-events-none"></div>
          </div>
        `

        const customIcon = L.divIcon({
          html: svgIcon,
          iconSize: [45, 55],
          iconAnchor: [22.5, 55],
          popupAnchor: [0, -55],
          className: 'custom-marker',
        })

        const marker = L.marker([location.lat, location.lon], { icon: customIcon }).addTo(map)

        // Crear popup con información mejorada
        const popupContent = `
          <div class="font-sans min-w-[220px] text-center">
            <!-- Logo con fondo para mejor contraste -->
            <div class="mb-3 p-3 bg-white/95 rounded-xl shadow-md">
              <img src="${retailImage}" alt="${retailName}" class="w-full h-auto object-contain max-w-[100px] mx-auto" />
            </div>
            
            <!-- Información de ubicación con mejor contraste -->
            <div class="p-3 bg-black/40 rounded-lg" style="border-top: 2px solid ${color};">
              <div class="mb-2 flex items-start justify-center gap-2">
                <svg class="flex-shrink-0 mt-0.5" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="#f8b134" stroke-width="2.5">
                  <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                  <circle cx="12" cy="10" r="3"></circle>
                </svg>
                <span class="text-sm text-white font-semibold leading-relaxed" style="text-shadow: 0 1px 3px rgba(0,0,0,0.5);">${location.direccion}</span>
              </div>
              ${
                location.ciudad && location.provincia
                  ? `<div class="text-[13px] text-brand font-medium mt-1.5" style="text-shadow: 0 1px 2px rgba(0,0,0,0.5);">
                ${location.ciudad}, ${location.provincia}
              </div>`
                  : ''
              }
            </div>
          </div>
        `

        marker.bindPopup(popupContent, {
          maxWidth: 300,
          className: 'custom-popup',
        })
      })

      console.log('Mapa inicializado correctamente')
    } catch {
      console.error('Error al inicializar el mapa.')
    }
  }
</script>

<style>
  /* Efecto de brillo en la leyenda (no se puede hacer con Tailwind) */
  .legend-container::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 1.5rem;
    padding: 1px;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), transparent);
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }

  /* Asegurar que los controles de Leaflet sean visibles */
  :global(.leaflet-control-zoom) {
    border: 1px solid rgba(255, 255, 255, 0.1) !important;
    border-radius: 12px !important;
    background: linear-gradient(
      135deg,
      rgba(139, 92, 246, 0.5) 0%,
      rgba(0, 41, 107, 0.7) 100%
    ) !important;
    backdrop-filter: blur(10px);
    overflow: hidden;
  }

  :global(.leaflet-control-zoom a) {
    color: #fff !important;
    background: transparent !important;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1) !important;
    transition: all 0.3s ease;
  }

  :global(.leaflet-control-zoom a:hover) {
    background: rgba(255, 255, 255, 0.1) !important;
    color: #f8b134 !important;
  }

  /* Estilo mejorado para los popups - estilo bento-card */
  :global(.leaflet-popup-content-wrapper) {
    border-radius: 1.5rem;
    box-shadow: 0 20px 60px rgba(139, 92, 246, 0.3);
    padding: 16px;
    background: linear-gradient(
      135deg,
      rgba(139, 92, 246, 0.5) 0%,
      rgba(0, 41, 107, 0.7) 100%
    ) !important;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    position: relative;
  }

  :global(.leaflet-popup-content-wrapper::before) {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 1.5rem;
    padding: 1px;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), transparent);
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }

  :global(.leaflet-popup-content-wrapper::after) {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: repeating-linear-gradient(
      to right,
      transparent 0px,
      transparent 4px,
      rgba(255, 255, 255, 0.1) 4px,
      rgba(255, 255, 255, 0.1) 8px
    );
  }

  :global(.leaflet-popup-content) {
    margin: 0;
    color: #fff;
  }

  :global(.leaflet-popup-tip) {
    border-radius: 2px;
    background: linear-gradient(
      135deg,
      rgba(139, 92, 246, 0.5) 0%,
      rgba(0, 41, 107, 0.7) 100%
    ) !important;
    backdrop-filter: blur(10px);
  }

  :global(.leaflet-popup-close-button) {
    color: rgba(255, 255, 255, 0.6) !important;
    font-size: 20px !important;
    transition: all 0.3s ease;
  }

  :global(.leaflet-popup-close-button:hover) {
    color: #f8b134 !important;
  }

  /* Estilo para los marcadores personalizados */
  :global(.custom-marker) {
    background: none;
    border: none;
  }

  :global(.custom-marker .marker-container) {
    transition: all 0.3s ease;
    transform-style: preserve-3d;
  }

  :global(.custom-marker:hover .marker-container) {
    transform: translateY(-8px) scale(1.08);
  }

  /* Animación de la imagen dentro */
  :global(.custom-marker:hover img) {
    transform: scale(1.05);
    filter: brightness(1.1);
  }

  /* Animación de la sombra */
  :global(.custom-marker:hover .marker-container > div:first-child) {
    width: 35px !important;
    opacity: 0.5;
  }

  /* Transiciones suaves para todos los elementos internos */
  :global(.custom-marker .marker-container > div) {
    transition: all 0.3s ease;
  }

  :global(.custom-marker img) {
    transition: all 0.3s ease;
  }

  /* Estilo para el marcador de ubicación del usuario */
  :global(.user-location-marker) {
    background: none;
    border: none;
  }

  :global(.user-location-marker svg) {
    filter: drop-shadow(0 2px 8px rgba(248, 177, 52, 0.6));
    animation: userPulse 2s ease-in-out infinite;
  }

  @keyframes userPulse {
    0%,
    100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.7;
      transform: scale(1.1);
    }
  }
</style>
